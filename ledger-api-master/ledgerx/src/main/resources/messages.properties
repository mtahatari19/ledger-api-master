# Default messages (English)
# Application messages
app.name=LedgerX
app.description=Financial Ledger Management System
# Common messages
common.success=Operation completed successfully
common.error=An error occurred while processing your request
common.validation.error=Validation failed
common.not.found=Resource not found
common.unauthorized=Unauthorized access
common.forbidden=Access denied
# HTTP Status messages
http.400.bad.request=Bad request - please check your input
http.401.unauthorized=Authentication required
http.403.forbidden=Access to this resource is forbidden
http.404.not.found=The requested resource was not found
http.500.internal.error=Internal server error - please try again later
# Validation messages
validation.field.required=This field is required
validation.field.invalid=This field contains invalid data
validation.email.invalid=Please provide a valid email address
validation.password.weak=Password must be at least 8 characters long
# Business logic messages
business.operation.success=Business operation completed successfully
business.operation.failed=Business operation failed
# Category Management Messages
category.management.create.success=Category {0} created successfully
category.management.update.success=Category {0} updated successfully
category.management.delete.success=Category {0} deleted successfully
category.management.get.success=Category {0} retrieved successfully
category.management.not.found=Category with ID {0} not found
category.management.validation.name.required=Category name is required
category.management.validation.name.size=Category name must be between 2 and 100 characters
category.management.validation.name.exists=Category with name {0} already exists
category.management.validation.description.size=Description must not exceed 500 characters
# Product Management Messages
product.management.create.success=Product {0} created successfully
product.management.update.success=Product {0} updated successfully
product.management.delete.success=Product {0} deleted successfully
product.management.get.success=Product {0} retrieved successfully
product.management.status.update.success=Product {0} status updated to {1} successfully
product.management.not.found=Product with ID {0} not found
product.management.delete.in.use=Product with ID {0} cannot be deleted as it is used in plans
product.management.validation.code.required=Product code is required
product.management.validation.code.size=Product code must be between 2 and 50 characters
product.management.validation.code.exists=Product with code {0} already exists
product.management.validation.name.required=Product name is required
product.management.validation.name.size=Product name must be between 2 and 200 characters
product.management.validation.description.size=Description must not exceed 4000 characters
product.management.validation.status.required=Product status is required
# Currency Management Messages
currency.management.create.success=Currency {0} created successfully
currency.management.update.success=Currency {0} updated successfully
currency.management.delete.success=Currency {0} deleted successfully
currency.management.get.success=Currency {0} retrieved successfully
currency.management.status.update.success=Currency {0} status updated to {1} successfully
currency.management.active.retrieved.success=Retrieved {0} active currencies successfully
currency.management.status.retrieved.success=Retrieved {0} currencies with status {1} successfully
currency.management.not.found=Currency with ID {0} not found
currency.management.delete.in.use=Currency with ID {0} cannot be deleted as it is in use
currency.management.validation.code.required=Currency code is required
currency.management.validation.code.size=Currency code must be exactly 3 characters
currency.management.validation.code.pattern=Currency code must be 3 uppercase letters
currency.management.validation.code.exists=Currency with code {0} already exists
currency.management.validation.numcode.required=Currency numeric code is required
currency.management.validation.numcode.exists=Currency with numeric code {0} already exists
currency.management.validation.swiftcode.required=SWIFT code is required
currency.management.validation.swiftcode.size=SWIFT code must be exactly 3 characters
currency.management.validation.swiftcode.pattern=SWIFT code must be 3 uppercase letters
currency.management.validation.swiftcode.exists=Currency with SWIFT code {0} already exists
currency.management.validation.name.required=Currency name is required
currency.management.validation.name.size=Currency name must be between 2 and 100 characters
currency.management.validation.symbol.required=Currency symbol is required
currency.management.validation.symbol.size=Currency symbol must be between 1 and 10 characters
currency.management.validation.decimalprecision.required=Decimal precision is required
currency.management.validation.status.required=Currency status is required
# Organization Management Messages
organization.management.create.success=Organization {0} created successfully
organization.management.update.success=Organization {0} updated successfully
organization.management.delete.success=Organization {0} deleted successfully
organization.management.get.success=Organization {0} retrieved successfully
organization.management.status.update.success=Organization {0} status updated to {1} successfully
organization.management.active.retrieved.success=Retrieved {0} active organizational units successfully
organization.management.status.retrieved.success=Retrieved {0} organizational units with status {1} successfully
organization.management.root.retrieved.success=Retrieved {0} root organizational units successfully
organization.management.children.retrieved.success=Retrieved {0} children for organization {1} successfully
organization.management.hierarchical.retrieved.success=Retrieved hierarchical tree with {0} root organizational units successfully
organization.management.hierarchical.status.retrieved.success=Retrieved hierarchical tree with {0} root organizational units for status {1} successfully
organization.management.not.found=Organization with ID {0} not found
organization.management.delete.has.children=Organization with ID {0} cannot be deleted as it has child organizational units
organization.management.delete.in.use=Organization with ID {0} cannot be deleted as it is in use
organization.management.validation.code.required=Organization code is required
organization.management.validation.code.size=Organization code must be between 2 and 50 characters
organization.management.validation.code.exists=Organization with code {0} already exists
organization.management.validation.name.required=Organization name is required
organization.management.validation.name.size=Organization name must be between 2 and 200 characters
organization.management.validation.description.size=Description must not exceed 4000 characters
organization.management.validation.status.required=Organization status is required
organization.management.validation.parent.not.found=Parent organization with ID {0} not found
organization.management.validation.parent.inactive=Parent organization with ID {0} is inactive
organization.management.validation.circular.reference=Setting parent {0} would create a circular reference
# Account Management Messages
account.management.create.success=Account {0} created successfully
account.management.update.success=Account {0} updated successfully
account.management.delete.success=Account {0} deleted successfully
account.management.get.success=Account {0} retrieved successfully
account.management.status.update.success=Account {0} status updated to {1} successfully
account.management.active.retrieved.success=Retrieved {0} active accounts successfully
account.management.status.retrieved.success=Retrieved {0} accounts with status {1} successfully
account.management.group.retrieved.success=Retrieved {0} accounts for group {1} successfully
account.management.group.status.retrieved.success=Retrieved {0} accounts for group {1} and status {2} successfully
account.management.internal.retrieved.success=Retrieved {0} accounts for internal flag {1} successfully
account.management.internal.status.retrieved.success=Retrieved {0} accounts for internal flag {1} and status {2} successfully
account.management.not.found=Account with ID {0} not found
account.management.delete.in.use=Account with ID {0} cannot be deleted as it is in use
account.management.validation.group.required=Account group is required
account.management.validation.numericcode.required=Account numeric code is required
account.management.validation.numericcode.exists=Account with numeric code {0} already exists
account.management.validation.stringcode.required=Account string code is required
account.management.validation.stringcode.size=Account string code must be between 2 and 50 characters
account.management.validation.stringcode.exists=Account with string code {0} already exists
account.management.validation.persiantitle.required=Persian title is required
account.management.validation.persiantitle.size=Persian title must be between 2 and 200 characters
account.management.validation.englishtitle.required=English title is required
account.management.validation.englishtitle.size=English title must be between 2 and 200 characters
account.management.validation.accounttype.required=Account type is required
account.management.validation.accounttype.not.found=Account type with ID {0} not found
account.management.validation.accounttype.inactive=Account type with ID {0} is inactive
account.management.validation.isinternal.required=Internal flag is required
account.management.validation.customertype.required=Customer type is required when account is not internal
account.management.validation.customertype.not.found=Customer type with ID {0} not found
account.management.validation.customertype.inactive=Customer type with ID {0} is inactive
account.management.validation.status.required=Account status is required
account.management.validation.party.required=Party is required for external accounts
account.management.validation.currency.not.allowed=Currency is not allowed for this account type
account.management.validation.orgunit.not.allowed=Organizational unit is not allowed for this account type
account.management.validation.partytype.not.allowed=Party type is not allowed for this account type
# Account Type Management Messages
accounttype.validation.code.required=Account type code is required
accounttype.validation.code.size=Account type code must be between 2 and 50 characters
accounttype.validation.name.required=Account type name is required
accounttype.validation.name.size=Account type name must be between 2 and 200 characters
accounttype.validation.description.size=Description must not exceed 1000 characters
# Customer Type Management Messages
customertype.validation.code.required=Customer type code is required
customertype.validation.code.size=Customer type code must be between 2 and 50 characters
customertype.validation.name.required=Customer type name is required
customertype.validation.name.size=Customer type name must be between 2 and 200 characters
customertype.validation.description.size=Description must not exceed 1000 characters
# Goods Management Messages
goods.validation.not.found=Goods not found with id: {0}
goods.validation.group.not.found=GoodsGroup not found with id: {0}
# Account Type Management Messages
accounttype.validation.not.found=Account type not found with id: {0}
accounttype.validation.currency.not.found=Currency not found with id: {0}
accounttype.validation.orgunit.not.found=Organizational unit not found with id: {0}
accounttype.validation.partytype.not.found=Party type not found with id: {0}
# Party Management Messages
party.management.create.success=Party {0} created successfully
party.management.update.success=Party {0} updated successfully
party.management.delete.success=Party {0} deleted successfully
party.management.get.success=Party {0} retrieved successfully
party.management.not.found=Party with ID {0} not found
party.validation.externalId.size=External ID must not exceed 100 characters
party.validation.partyTypeId.required=Party type ID is required
party.validation.type.not.found=Party type not found with id: {0}
party.validation.externalId.exists=External ID {0} already exists
